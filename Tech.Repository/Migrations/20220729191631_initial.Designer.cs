// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tech.Repository;

#nullable disable

namespace Tech.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220729191631_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tech.Core.Concrete.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Body = "Body 1",
                            CreateDate = new DateTime(2022, 7, 29, 22, 16, 30, 892, DateTimeKind.Local).AddTicks(2287),
                            Title = "Title 1 ",
                            UserId = 1
                        },
                        new
                        {
                            PostId = 2,
                            Body = "Body 2",
                            CreateDate = new DateTime(2022, 7, 29, 22, 16, 30, 892, DateTimeKind.Local).AddTicks(2290),
                            Title = "Title 2 ",
                            UserId = 2
                        },
                        new
                        {
                            PostId = 3,
                            Body = "Body 3",
                            CreateDate = new DateTime(2022, 7, 29, 22, 16, 30, 892, DateTimeKind.Local).AddTicks(2291),
                            Title = "Title 3 ",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Tech.Core.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConfirmPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "123456",
                            CreateDate = new DateTime(2022, 7, 29, 22, 16, 30, 892, DateTimeKind.Local).AddTicks(2167),
                            Email = "emre11@gmail.com",
                            Password = "123456"
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "123456",
                            CreateDate = new DateTime(2022, 7, 29, 22, 16, 30, 892, DateTimeKind.Local).AddTicks(2181),
                            Email = "ahmet@gmail.com",
                            Password = "123456"
                        });
                });

            modelBuilder.Entity("Tech.Core.Concrete.Post", b =>
                {
                    b.HasOne("Tech.Core.Concrete.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tech.Core.Concrete.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
